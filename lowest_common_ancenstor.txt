struct Node *findLCA(struct Node* root, int n1, int n2)
{
    // Base case
    if (root == NULL) return NULL;

    // If either n1 or n2 matches with root's key, report
   
   if (root->data == n1 || root->data == n2)
        return root;

    // Look for keys in left and right subtrees
   
    Node *left_lca  = findLCA(root->left, n1, n2);
    Node *right_lca = findLCA(root->right, n1, n2);

    // If both of the above calls return Non-NULL, then one key
 
    if (left_lca != NULL && right_lca != NULL)  return root;

    // Otherwise check if left subtree or right subtree is LCA
    if(left_lca != NULL && right_lca !=NULL)
        return root;
     
     if(left_lca)
      return left;
   if(right_lca)
return right;

}